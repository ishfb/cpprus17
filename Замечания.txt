* [ ] Сказать, что интерфейс не поменялся, что МСМС - это организация кода, а не архитектурный подход
* [ ] Объяснить, почему повышается порог входа в систему
* [ ] При использовании МСМС нужно чётко представлять, что делает каждый компонент
* [ ] Повышается ответственность при разработке интерфейса, нельзя наговнокодить
* [ ] Проследить за выравниванием слов в списках
* [ ] Не забыть проговорить словами, что блок одного и того же цвета используется в нескольких местах (слайд 10)
* [ ] Раскрывать списки по одному
* [ ] "Можно было бы подумать, что деньги платят только за прод. И так и было бы, если бы прод не надо было поддерживать"
* [ ] Подумать, на что заменить тест ChargeDoesntIncreaseMoney
* [ ] Код, выделенный красным, плохо виден
* [ ] Тренер на титульнике
* [ ] if (ua.money_ < 0) не там
* [ ] Пример с Нижним Новгородом не жжёт. Идти - это плохо, а рефакторинг - это хорошо. Нужен пример, где тяжёлая активность - это хорошо
* [ ] Менеджер пришёл с функ. тестом, а мы пишем юнит-тест
* [ ] Сказать, откуда взялся MCMC
* [x] Консистентная первая буква в списках
* [x] Достоинства МСМС: уменьшение порога входа в каждый отдельный компонент, потому что они маленькие и простые
* [x] Слайд 16, добавить "Minimize", "maximize" в заголовок
